@using System.Net.Mime
@using System.Web.UI.WebControls
@using Mvc_CNFApp.Models
@model Mvc_CNFApp.Models.PageModel

@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);

    CnfDbContext db = new CnfDbContext();

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    string aa = currentDateTime.ToString("dd-MMM-yyyy").Substring(7, 4);
    Int64 yy = Convert.ToInt64(aa);

    List<SelectListItem> listJobNo = new List<SelectListItem>();


    //var resultJobNo = (db.CnfJobDbSet.Join(db.GlAcchartDbSet, cnfjob => cnfjob.COMPID, glacchart => glacchart.COMPID,
    //    (cnfjob, glacchart) => new { cnfjob, glacchart })
    //    .Where(a => a.cnfjob.PARTYID == a.glacchart.ACCOUNTCD && a.cnfjob.COMPID == compid && a.cnfjob.JOBYY==yy)
    //    .Select(a => new { a.cnfjob.JOBNO, a.cnfjob.JOBYY, a.cnfjob.JOBTP, a.glacchart.ACCOUNTNM, a.cnfjob.Cnf_JobID }).OrderBy(a => a.JOBNO));

    //var resultJobNo = (from t1 in db.CnfJobDbSet
    //                   join t2 in db.GlAcchartDbSet on t1.COMPID equals t2.COMPID
    //                   where t1.COMPID == compid && t1.PARTYID == t2.ACCOUNTCD && t1.JOBYY == yy
    //                   select new { t1.JOBNO, t1.JOBYY, t1.JOBTP, t2.ACCOUNTNM, t1.Cnf_JobID }).OrderBy(a => a.JOBNO).ToList();
    if (TempData["yy"] != null)
    {
        yy = Convert.ToInt64((TempData["yy"]));
    }

    var resultJobNo = (from n in db.CnfJobDbSet where n.COMPID == compid && n.JOBYY == yy select n).ToList();

    foreach (var n in resultJobNo)
    {
        if (n != null)
        {
            listJobNo.Add(new SelectListItem { Text = (n.JOBNO.ToString() + " | " + n.JOBYY.ToString() + " | " + n.JOBTP + " | " + n.PartyName.ToString()), Value = n.Cnf_JobID.ToString() });
        }
    }


    List<SelectListItem> listExpenseCD = new List<SelectListItem>();
    var resultExpenseName = (from n in db.GlAcchartDbSet where n.COMPID == compid select n).ToList();

    foreach (var n in resultExpenseName)
    {
        if (n != null)
        {
            listExpenseCD.Add(new SelectListItem { Text = (n.ACCOUNTNM), Value = n.ACCOUNTCD.ToString() });
        }
    }



}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.ACnfJobexpmst.COMPID, new { id = "txtCompId", @Value = compid })

    <div id="contentHeaderBox">
        @if (TempData["jobexpense"] != "null")
        {
            <h1 style="padding-left: 16px">
                Create Job Wise Expense Information
           
                <span style="color: red">@TempData["jobexpense"]</span>   
            
            </h1>
        }
        else
        {
            <h1 style="padding-left: 16px">
                Create Job Wise Expense Information
           
              
            
            </h1>
        }
        
    </div>
    <br />
    <div class="col-md-12">
        <div class="form-group">
            <div class="row">
                <div class="col-md-1">
                    <span><br /></span>
                    <input type="submit" class="btn btn-primary" value="Edit" name="command" />
                    @if (ViewBag.UpdatePermission != null)
                    {
                        <h5 style="color: #C03523">@ViewBag.UpdatePermission</h5>
                    }
                </div>
                <div class="col-md-2">
                    <span>@Html.Label("name", "Date", htmlAttributes: new { @class = "control-label" })</span>
                    @if (TempData["transdate"] != null)
                    {
                        @Html.TextBoxFor(model => model.ACnfJobexpmst.TRANSDT, new { @class = "form-control input-sm", id = "idTRANSDT", @Value = TempData["transdate"] })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.ACnfJobexpmst.TRANSDT, new { @class = "form-control input-sm", id = "idTRANSDT" })
                    }
                </div>
                <div class="col-md-1">
                    <span>@Html.Label("name", "Year", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ACnfJobexpmst.TRANSYY, new { @class = "form-control input-sm", id = "txtTRANSYY", @readonly = "readonly" })
                </div>
                <div class="col-md-2">
                    <span>@Html.Label("name", "Invoice No", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ACnfJobexpmst.TRANSNO, new { @class = "form-control input-sm", id = "txtTRANSNO", @readonly = "readonly" })
                </div>
                <div class="col-md-3">
                    <span>@Html.Label("name", "Job No", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.DropDownListFor(model => model.ACnfJob.Cnf_JobID, listJobNo, "-Select-", new { @class = "form-control input-sm", id = "txtJOBNO" })
                </div>
                <div class="col-md-1">
                    <span>@Html.Label("name", "J. Year", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ACnfJobexpmst.JOBYY, new { @class = "form-control input-sm", id = "txtJOBYY", @Value = yy })
                </div>
                <div class="col-md-2">
                    <span>@Html.Label("name", "Job Type", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ACnfJobexpmst.JOBTP, new { @class = "form-control input-sm", id = "txtJOBTP", @readonly = "readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-4">
                    <span>@Html.Label("name", "Expense By", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.DropDownListFor(model => model.ACnfJobexpmst.EXPCD, listExpenseCD, "-Select-", new { @class = "form-control input-sm", id = "txtEXPCD"})
                </div>
                <div class="col-md-5">
                    <span>@Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ACnfJobexpmst.REMARKS, new { @class = "form-control input-sm", id = "txtREMARKS" })
                </div>
                <div class="col-md-1">
                    @if (TempData["Hide_SubmitButton"] != null)
                    {
                        <span><br /></span>
                        <input type="submit" class="btn btn-primary" value="Print" name="command" formtarget="_blank" />
                    }
                    else
                    {
                        <span><br /></span>
                        <input type="submit" class="btn btn-success" value="Submit" name="command" id="submitid"/>
                    }
                </div>
                <div class="col-md-1">
                    <span><br /></span>
                    <input type="submit" class="btn btn-primary" value="Complete" name="command" />
                </div>
            </div>
            @Html.TextBoxFor(model => model.ACnfJobexpmst.INSLTUDE, new { id = "latlonPos", style = "display: none;" })

            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />
        </div>

        <div>
            <hr/>
        </div>

   

    </div>
     <br />
    
                <div class="col-md-12">
                    <div class="row">
                       
                        @if (TempData["TRANSNO"] != null)
                        {
                            List<SelectListItem> listEspenseName = new List<SelectListItem>();
                            var findName = (from n in db.CnfExpenseDbSet where n.COMPID == compid select n).ToList();
                            foreach (var x in findName)
                            {
                                if (x != null)
                                {
                                    listEspenseName.Add(new SelectListItem { Text = x.EXPNM, Value = x.EXPID.ToString() });
                                }

                            }
                          
                                @Html.HiddenFor(model => model.ACnfJobexp.cnf_JobEXPID, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.COMPID, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.TRANSDT, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.TRANSNO, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.TRANSYY, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.JOBYY, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.JOBTP, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.JOBNO, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.EXPCD, new { @readonly = "readonly" })
                                @Html.HiddenFor(model => model.ACnfJobexp.EXPSL, new { @readonly = "readonly" })

                                <div class="col-md-6">
                                    <span>  @Html.Label("name", "Expense Particulars", htmlAttributes: new { @class = "control-label" })</span>
                                    @if (TempData["expenseName"] != null)
                                    {
                                        @Html.TextBoxFor(model => model.AcCnfExpense.EXPNM, new { @class = "form-control input-sm", @readonly = "readonly", @Value = TempData["expenseName"],@autofocus=true })
                                        @Html.HiddenFor(model => model.ACnfJobexp.EXPID, new { @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => model.ACnfJobexp.EXPID, listEspenseName, "-Select-", new { id = "expenseid", @class = "form-control input-sm", @autofocus = true })
                                    }
                                </div>
                                <div class="col-md-2">
                                    <span>  @Html.Label("name", "Amount", htmlAttributes: new { @class = "control-label" })</span>
                                    @Html.TextBoxFor(model => model.ACnfJobexp.EXPAMT, new { @class = "form-control input-sm", id = "txtBrand" })
                                </div>
                                <div class="col-md-2">
                                    <span>  @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })</span>
                                    @Html.TextBoxFor(model => model.ACnfJobexp.REMARKS, new { @class = "form-control input-sm", id = "txtBrand" })
                                </div>



                                if (TempData["ShowAddButton"] == null)
                                {
                                    <div class="col-md-2">
                                        <span> <br /></span>
                                        <input type="submit" class="btn btn-info" value="Update" id="btnUpdate" name="command" style="margin-top: 0px; margin-left: 5px" />
                                    </div>
                                }

                                else
                                {
                                    <div class="col-md-2">
                                        <span> <br /></span>
                                        <input type="submit" class="btn btn-info" value="Add" id="btnAdd" name="command" style="margin-top: 0px; margin-left: 5px" />
                                    </div>
                                }
                           
                        }
                       
                    </div>

                    <br />
                    <div class="row">
                      
                        @if (TempData["TRANSNO"] != null)
                        {
                            var transNO = Convert.ToInt64(TempData["TRANSNO"]);
                            var transYear = Convert.ToInt64(TempData["TRANSYY"]);
                            Int64 LogCompId = Convert.ToInt64(HttpContext.Current.Session["loggedCompID"]);
                            var res = db.CnfJobexpDbSet.Where(d => d.TRANSNO == transNO && d.COMPID == LogCompId && d.TRANSYY == transYear);

                            var expenseName = (from n in db.CnfExpenseDbSet where n.COMPID == compid select n).ToList();
                          
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <tr>
                                            <td align="center">
                                                <h6>SL</h6>
                                            </td>
                                            <td>
                                                <h6>Expense Particulars</h6>
                                            </td>
                                            <td>
                                                <h6>Amount</h6>
                                            </td>
                                            <td>
                                                <h6>Remarks</h6>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                        @{
                            Decimal totalAmount = 0;
                                        }
                                        @foreach (var item in res)
                                        {
                                            <tr>
                                                @Html.HiddenFor(model => item.cnf_JobEXPID, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.COMPID, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.TRANSDT, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.TRANSNO, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.TRANSYY, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.JOBYY, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.JOBTP, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.JOBNO, new { @readonly = "readonly" })
                                                @Html.HiddenFor(model => item.EXPCD, new { @readonly = "readonly" })

                                                <td align="center">
                                                    @Html.DisplayFor(model => item.EXPSL, new { style = "width:10em;", id = "txtExpNm", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    @foreach (var x in expenseName)
                                                    {
                                                        if (x != null && item.EXPID == x.EXPID)
                                                        {
                                                            @Html.DisplayFor(model => x.EXPNM, new { @readonly = "readonly" })
                                                        }
                                                    }
                                                    @Html.HiddenFor(model => item.EXPID, new { id = "txtExpNm", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.EXPAMT, new { id = "txtExpNm", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.REMARKS, new { id = "txtExpNm", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    <span>
                                                        <a href="@Url.Action("gridUpdate", new { id = item.cnf_JobEXPID, cid = item.COMPID, TransYear = item.TRANSYY, TransNO = item.TRANSNO, Serial = item.EXPSL })" class="btn btn-sm btn-info">
                                                            <span class="glyphicon glyphicon-pencil"></span>
                                                        </a>
                                                    </span>


                                                </td>
                                                <td>
                                                    <span>
                                                        <a href="@Url.Action("gridDelete", new { id = item.cnf_JobEXPID, cid = item.COMPID, TransYear = item.TRANSYY, TransNO = item.TRANSNO, Serial = item.EXPSL })" class="btn btn-sm btn-danger">
                                                            <span class="glyphicon glyphicon-remove"></span>
                                                        </a>
                                                    </span>

                                                </td>

                                            </tr>
                                                    totalAmount = totalAmount + Convert.ToDecimal(item.EXPAMT);
                                        }
                                        <tr>
                                            <td></td>
                                            <td>
                                                <h6>Total Amount:</h6>
                                            </td>
                                            <td>
                                                <h6><strong>@totalAmount</strong></h6>
                                            </td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </div>
                            
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped"></table>
                            </div>
                        }
                    </div>
                    </div>

    
    
    
    

 


    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>
    //idTRANSDT

    <script type="text/javascript">
        $(document).ready(function () {
            $('#idTRANSDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true
                //format: "yyyy-M-dd"
            });
            if ($('#idTRANSDT').val() != "") {
               // document.getElementById("expenseid").focus();
            } else {
                document.getElementById("idTRANSDT").focus();
            }


            //$('#submitid').click(function () {
            //    if ($('#txtJOBNO').val() == "")
            //    {
            //        alert("Please Select Job No");
            //    }
            //});

            $('#idTRANSDT').change(function () {
                //When the UserName (Dropdown list) changed then get the "User ID" from "ASLUSERCO" table
                var changedtxt = $('#idTRANSDT').val();

                var txtTRANSYY = document.getElementById('txtTRANSYY');
                var TRANSNO = document.getElementById('txtTRANSNO');

                $.getJSON(
                    "/JobExpenseInfo/DateChanged", { "Changedtxt": changedtxt },
                    function (myData) {
                        txtTRANSYY.value = myData.TRANSYY;
                        TRANSNO.value = myData.TRANSNO;
                        document.getElementById("txtJOBNO").focus();
                    });

            });

            $('#txtJOBNO').change(function () {
                //When the UserName (Dropdown list) changed then get the "User ID" from "ASLUSERCO" table
                var changedtxt = $('#txtJOBNO').val();

                var txtJOBYY = document.getElementById('txtJOBYY');
                var txtJOBTP = document.getElementById('txtJOBTP');

                $.getJSON(
                    "/JobExpenseInfo/JobNOChanged", { "Changedtxt": changedtxt },
                    function (myData) {
                        txtJOBYY.value = myData.JOBYY;
                        txtJOBTP.value = myData.JOBTP;
                        document.getElementById("txtJOBNO").focus();
                    });

            });



            $("#txtJOBYY").datepicker({
                format: "yyyy", // Notice the Extra space at the beginning
                viewMode: "years",
                minViewMode: "years",
                autoclose: true
            }).on('changeDate', dateChanged);

            
        });

        function dateChanged(ev) {


            var changedtxt = $('#txtJOBYY').val();
            var changedtxt2 = $('#txtCompId').val();

            //var txtJobno = document.getElementById('textidJobNo');


            $.ajax
                     ({
                         url: '@Url.Action("JobNofordropdown", "JobExpenseInfo")',
                         type: 'post',
                         dataType: "json",
                         data: { changedtxt: changedtxt, changedtxt2: changedtxt2 },
                         success: function (data1) {

                             $("#txtJOBNO").empty();


                             $("#txtJOBNO").append('<option value="'
                                 + '">'
                                + "-- Choose one --" + '</option>');

                             $.each(data1, function (i, memo1) {

                                 $("#txtJOBNO").append('<option value="'
                                     + memo1.Value + '">'
                                     + memo1.Text + '</option>');
                             });

                         }
                     });



        }
        
    </script>

    

}


