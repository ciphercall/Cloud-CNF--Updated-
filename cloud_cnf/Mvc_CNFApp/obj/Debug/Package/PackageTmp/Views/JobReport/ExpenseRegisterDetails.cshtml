@using System.Net.Mime
@using System.Web.UI.WebControls
@using Mvc_CNFApp.Models
@model Mvc_CNFApp.Models.PageModel


@{
    ViewBag.Title = "ExpenseRegisterDetails";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    CnfDbContext db = new CnfDbContext();

    //Expense Head: [ ]
    List<SelectListItem> listExpenseHead = new List<SelectListItem>();
    var result = (from n in db.GlAcchartDbSet
                  where n.COMPID == compid
                  select n).ToList();

    foreach (var n in result)
    {
        if (n != null)
        {
            listExpenseHead.Add(new SelectListItem { Text = n.ACCOUNTNM, Value = n.ACCOUNTCD.ToString() });
        }
    }



    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
    
    //permission check

    Int64 loggedUserID = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"].ToString());

   
    var permission_Check = from m in db.AslRoleDbSet
                           where m.COMPID == compid && m.USERID == loggedUserID
                               && m.CONTROLLERNAME == "JobReport" && m.ACTIONNAME == "ExpenseRegisterDetails"
                           select m;
    var Status = "";
    foreach (var check in permission_Check)
    {
        Status = check.STATUS;
    }

    if (Status == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
}

<link href="~/Content/bootstrap%20datepicker%20css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap%20datepicker%20css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.ACnfJobexp.COMPID, new { id = "txtCompId", @Value = compid })
    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Expense Register</h1>
    </div>
    <br />
    
      <div class="col-md-12">
          <div class="form-group">
              <div class="row">
                  <div class="col-md-2">
                      @Html.Label("name", "From date: ", htmlAttributes: new { @class = "control-label" })
                  </div>
                  <div class="col-md-3">
                      @Html.TextBoxFor(model => model.FromDate, htmlAttributes: new { @class = "form-control", id = "idFromDate", @Value = currentDateTime.ToString("dd-MMM-yyyy"),autofocus=true })
                      @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                  </div>
                  <div class="col-md-2"><br /></div>
                  <div class="col-md-2">
                      @Html.Label("name", "To Date: ", htmlAttributes: new { @class = "control-label" })
                  </div>
                  <div class="col-md-3">
                      @Html.TextBoxFor(model => model.ToDate, htmlAttributes: new { @class = "form-control", id = "idToDate", @Value = currentDateTime.ToString("dd-MMM-yyyy") })
                      @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                  </div>
              </div>
              <br />
              <div class="row">
                  <div class="col-md-2">
                      @Html.Label("name", "Expense By: ", htmlAttributes: new { @class = "control-label" })
                  </div>
                  <div class="col-md-6">
                      @Html.DropDownListFor(model => model.AGL_acchart.ACCOUNTCD, listExpenseHead, "-Select-", htmlAttributes: new { @class = "form-control",id="ExpenseBy" })
                  </div>
                  <div class="col-md-2"><br /></div>
                  <div class="col-md-2">
                      <input type="submit" class="btn btn-primary btn-block" value="Print" name="command" formtarget="_blank" />
                  </div>
              </div>
          </div>
          </div>
    
    
    
    
    
 


    <script type="text/javascript">

        $("#idFromDate").datepicker({
            format: "dd-M-yyyy",
            autoclose:true
        }).on('hide', function () {
            document.getElementById("idToDate").focus();
        });

        $("#idToDate").datepicker({
            format: "dd-M-yyyy",
            autoclose: true
        }).on('hide', function () {
            document.getElementById("ExpenseBy").focus();
        });
    </script>
}