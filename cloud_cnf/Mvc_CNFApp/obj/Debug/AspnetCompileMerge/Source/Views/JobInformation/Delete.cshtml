@using System.Data
@using System.Data.SqlClient
@using Mvc_CNFApp.Models
@model Mvc_CNFApp.Models.CNF_JOB

@{
    ViewBag.Title = "Delete";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    CnfDbContext db = new CnfDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);


    List<SelectListItem> listJobType = new List<SelectListItem>();
    listJobType.Add(new SelectListItem { Text = "IMPORT", Value = "IMPORT" });
    listJobType.Add(new SelectListItem { Text = "EXPORT", Value = "EXPORT" });

    List<SelectListItem> listStatus = new List<SelectListItem>();
    listStatus.Add(new SelectListItem { Text = "Active", Value = "A" });
    listStatus.Add(new SelectListItem { Text = "Inactive", Value = "I" });



}

<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

<script src="~/Scripts/bootstrap-datepicker.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Cnf_JobID, new { id = "HiddentxtCnf_JobID" })
    @Html.HiddenFor(model => model.COMPID, new { @Value = compid })
    
    <div id="contentHeaderBox">
        <h1>Delete Job Information</h1>
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["CnfDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='JobInformation' AND COMPID='{0}' AND USERID = '{1}'", compid, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();
            if (createStatus == "A")
            {

            }
            else if (updateStatus == "A")
            {
                Response.Redirect("~/JobInformation/FirstPartUpdate");
            }
            else if (deleteStatus == "A")
            {
                Response.Redirect("~/JobInformation/Delete");
            }


            if (createStatus == "I")
            {
                Response.Redirect(Url.Action("Index", "Logout"));
            }
            
            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "JobInformation")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "JobInformation")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "JobInformation")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "JobInformation")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "JobInformation")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "JobInformation")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "JobInformation")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "JobInformation")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />
     <div class="col-md-12">
         @if (TempData["JOBDeleteMessage"] != null)
         {
             <div class="panel-heading text-center">
                 <h4 style="color: #226699">@TempData["JOBDeleteMessage"]</h4>
             </div>
         }
         <div class="form-group">
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.JOBYY, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.JOBYY, htmlAttributes: new { id = "txtjobYear", @class = "form-control input-sm" })
                 </div>
              
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.JOBTP, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.DropDownListFor(model => model.JOBTP, listJobType, "-Select-", htmlAttributes: new { id = "ddltxtJobType", @class = "form-control input-sm" })
                     @Html.ValidationMessageFor(model => model.JOBTP, "", new { @class = "text-danger" })
                 </div>
                 <input type="submit" class="btn btn-info" value="getJobNO" id="btnSearch_JobType" name="command" style="display: none" />
                
               
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.JOBNO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.DropDownListFor(model => model.JOBNO, Enumerable.Empty<SelectListItem>(), "empty", new { id = "txtJOBNO", @class = "form-control input-sm" })
                 </div>
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.JOBCDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.JOBCDT, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.JOBCDT, "", new { @class = "text-danger" })
                 </div>
             </div>
             <br />
           
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.REGID, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.REGID, htmlAttributes: new { id = "ddltxtRedID", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.REGID, "", new { @class = "text-danger" })
                 </div>
              
                 <div class="col-md-3">
                     @Html.Label("Name", "Party Name", htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     <input type="text" id="ddltxtPARTYID" class="form-control input-sm" readonly="readonly" />
                     @*@Html.TextBoxFor(model => model.PARTYID, htmlAttributes: new { id = "ddltxtPARTYID", @class = "form-control input-sm", data_val = false, @readonly = "readonly"  })*@
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.CONSIGNEENM, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CONSIGNEENM, htmlAttributes: new { id = "txtCONSIGNEENM", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.CONSIGNEEADD, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CONSIGNEEADD, htmlAttributes: new { id = "txtCONSIGNEEADD", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.SUPPLIERNM, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.SUPPLIERNM, htmlAttributes: new { id = "txtSUPPLIERNM", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.PKGS, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.PKGS, htmlAttributes: new { id = "txtPKGS", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.GOODS, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.GOODS, htmlAttributes: new { id = "txtGOODS", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.WTGROSS, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.WTGROSS, htmlAttributes: new { id = "txtWTGROSS", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.WTGROSS, "", new { @class = "text-danger" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.WTNET, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.WTNET, htmlAttributes: new { id = "txtWTNET", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.WTNET, "", new { @class = "text-danger" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.CNFV_USD, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CNFV_USD, htmlAttributes: new { id = "txtCNFV_USD", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.CNFV_USD, "", new { @class = "text-danger" })
                 </div>
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.CNFV_ETP, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CNFV_ETP, htmlAttributes: new { id = "txtCNFV_ETP", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.CNFV_ERT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CNFV_ERT, htmlAttributes: new { id = "txtCNFV_ERT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.CNFV_ERT, "", new { @class = "text-danger" })
                 </div>
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.CNFV_BDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CNFV_BDT, htmlAttributes: new { id = "txtCNFV_BDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.CNFV_BDT, "", new { @class = "text-danger" })
                 </div>
               
                 
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.CRFV_USD, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CRFV_USD, htmlAttributes: new { id = "txtCRFV_USD", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.CRFV_USD, "", new { @class = "text-danger" })
                 </div>
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.ASSV_BDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.ASSV_BDT, htmlAttributes: new { id = "txtASSV_BDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.ASSV_BDT, "", new { @class = "text-danger" })
                 </div>
                
                 
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.COMMAMT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.COMMAMT, htmlAttributes: new { id = "txtCOMMAMT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.COMMAMT, "", new { @class = "text-danger" })
                 </div>
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.CONTNO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.CONTNO, htmlAttributes: new { id = "txtCONTNO", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.DOCINVNO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.DOCINVNO, htmlAttributes: new { id = "txtDOCINVNO", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
               
                 <div class="col-md-3">
                     @*@Html.LabelFor(model => model.DOCINVDT, htmlAttributes: new { @class = "control-label" })*@
                     @Html.Label("Invoice Date", htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.DOCINVDT, htmlAttributes: new { id = "idDOCINVDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.PERMITNO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.PERMITNO, htmlAttributes: new { id = "txtPERMITNO", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.PERMITDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.PERMITDT, htmlAttributes: new { id = "idPERMITDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.BILLNOM, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.BILLNOM, htmlAttributes: new { id = "txtBILLNOM", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.BILLDTM, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.BILLDTM, htmlAttributes: new { id = "idBILLDTM", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
               
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.BILLFDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.BILLFDT, htmlAttributes: new { id = "idBILLFDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.BENO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.BENO, htmlAttributes: new { id = "txtBENO", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
                
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.BEDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.BEDT, htmlAttributes: new { id = "idBEDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.LCNO, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.LCNO, htmlAttributes: new { id = "txtLCNO", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
              
                 <div class="col-md-3">
                     @Html.LabelFor(model => model.LCDT, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.TextBoxFor(model => model.LCDT, htmlAttributes: new { id = "idLCDT", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                 </div>
             </div>
             <br />
             <div class="row">
                 <div class="col-md-2">
                     @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label" })
                 </div>
                 <div class="col-md-3">
                     @Html.DropDownListFor(model => model.STATUS, listStatus, "--Select--", htmlAttributes: new { id = "txtSTATUS", @class = "form-control input-sm", data_val = false, @readonly = "readonly" })
                     @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                 </div>
             </div>

             @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
             @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
             @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
             @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

             @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
             <input id="lat" type="hidden" />
             <input id="lon" type="hidden" />

             <br />
             <div class="row">
                 <div class="col-md-4"></div>
                 <div class="col-md-4">
                     <input type="submit" class="btn btn-primary btn-block" value="Delete" name="command" />
                 </div>
                 <div class="col-md-4"></div>
             </div>
         </div>
         </div>
    
    
    
 

    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
           
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            
        $("#txtjobYear").datepicker({
            format: "yyyy", // Notice the Extra space at the beginning
            viewMode: "years",
            minViewMode: "years",
            autoclose:true
           
        });

        $('#idDOCINVDT').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#idPERMITDT').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#idBILLDTM').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#idBILLFDT').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#idBEDT').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#idLCDT').datepicker({
            format: "dd-M-yyyy"
            //format: "yyyy-M-dd"
        });
        $('#txtjobYear').change(function () {
            var txtjobYear = $('#txtjobYear').val();
            var dropDownJobType = $('#ddltxtJobType').val();

            //...................
            $.getJSON('/JobInformation/JobTypeChanged', { "DropDownJobType": dropDownJobType, "TxtjobYear": txtjobYear },
                function (result) {
                    var ddl = $('#txtJOBNO');
                    ddl.empty();
                    $("#txtJOBNO").append('<option value="'
                        + "select" + '">'
                        + "select" + '</option>');
                    $(result).each(function () {
                        $(document.createElement('option'))
                            .attr('value', this.Value)
                            .text(this.Text)
                            .appendTo(ddl);
                    });
                });

            $('#txtJOBNO').val("");

            $('#idJOBCDT').val("");
            $('#ddltxtRedID').val("");
            $('#ddltxtPARTYID').val("");
            $('#txtCONSIGNEENM').val("");
            $('#txtCONSIGNEEADD').val("");
            $('#txtSUPPLIERNM').val("");
            $('#txtPKGS').val("");
            $('#txtGOODS').val("");
            $('#txtWTGROSS').val("");
            $('#txtWTNET').val("");
            $('#txtCNFV_USD').val("");
            $('#txtCNFV_ETP').val("");
            $('#txtCNFV_ERT').val("");
            $('#txtCNFV_BDT').val("");
            $('#txtCRFV_USD').val("");
            $('#txtASSV_BDT').val("");
            $('#txtCOMMAMT').val("");
            $('#txtCONTNO').val("");
            $('#txtDOCINVNO').val("");
            $('#idDOCINVDT').val("");
            $('#txtPERMITNO').val("");
            $('#idPERMITDT').val("");
            $('#txtBILLNOM').val("");
            $('#idBILLDTM').val("");
            $('#idBILLFDT').val("");
            $('#txtBENO').val("");
            $('#idBEDT').val("");
            $('#txtLCNO').val("");
            $('#idLCDT').val("");
            $('#txtSTATUS').val("");
            //......................
        });
        $('#ddltxtJobType').change(function () {
            var txtjobYear = $('#txtjobYear').val();
            var dropDownJobType = $('#ddltxtJobType option:selected').val();

            //...................
            $.getJSON('/JobInformation/JobTypeChanged', { "DropDownJobType": dropDownJobType, "TxtjobYear": txtjobYear },
                function (result) {
                    var ddl = $('#txtJOBNO');
                    ddl.empty();
                    $("#txtJOBNO").append('<option value="'
                        + "select" + '">'
                        + "select" + '</option>');
                    $(result).each(function () {
                        $(document.createElement('option'))
                            .attr('value', this.Value)
                            .text(this.Text)
                            .appendTo(ddl);
                    });
                });
            //......................
        });
            //1. party name: [    ]Dropdown box
        $('#txtJOBNO').change(function () {
            //When the party name (Dropdown list) changed then get the "Party ID" from "CNF_PARTY" table
            var changedDropDown = $('#txtJOBNO option:selected').val();
            var ddltxtJobType = $('#ddltxtJobType').val();
            var txtjobYear = $('#txtjobYear').val();


            var HiddentxtCnf_JobID = document.getElementById('HiddentxtCnf_JobID');
            //var HiddentxtCompanyID = document.getElementById('HiddentxtCompanyID');
            var idJOBCDT = document.getElementById('idJOBCDT');
            var ddltxtRedID = document.getElementById('ddltxtRedID');
            var ddltxtPARTYID = document.getElementById('ddltxtPARTYID');
            var txtCONSIGNEENM = document.getElementById('txtCONSIGNEENM');
            var txtCONSIGNEEADD = document.getElementById('txtCONSIGNEEADD');
            var txtSUPPLIERNM = document.getElementById('txtSUPPLIERNM');
            var txtPKGS = document.getElementById('txtPKGS');
            var txtGOODS = document.getElementById('txtGOODS');
            var txtWTGROSS = document.getElementById('txtWTGROSS');
            var txtWTNET = document.getElementById('txtWTNET');
            var txtCNFV_USD = document.getElementById('txtCNFV_USD');
            var txtCNFV_ETP = document.getElementById('txtCNFV_ETP');
            var txtCNFV_ERT = document.getElementById('txtCNFV_ERT');
            var txtCNFV_BDT = document.getElementById('txtCNFV_BDT');
            var txtCRFV_USD = document.getElementById('txtCRFV_USD');
            var txtASSV_BDT = document.getElementById('txtASSV_BDT');
            var txtCOMMAMT = document.getElementById('txtCOMMAMT');
            var txtCONTNO = document.getElementById('txtCONTNO');
            var txtDOCINVNO = document.getElementById('txtDOCINVNO');
            var idDOCINVDT = document.getElementById('idDOCINVDT');
            var txtPERMITNO = document.getElementById('txtPERMITNO');
            var idPERMITDT = document.getElementById('idPERMITDT');
            var txtBILLNOM = document.getElementById('txtBILLNOM');
            var idBILLDTM = document.getElementById('idBILLDTM');
            var idBILLFDT = document.getElementById('idBILLFDT');
            var txtBENO = document.getElementById('txtBENO');
            var idBEDT = document.getElementById('idBEDT');
            var txtLCNO = document.getElementById('txtLCNO');
            var idLCDT = document.getElementById('idLCDT');
            var txtSTATUS = document.getElementById('txtSTATUS');
            var txtInseruserId = document.getElementById('HiddentxtInsuserId');
            var txtInsertime = document.getElementById('HiddentxtInstime');
            var txtinslutude = document.getElementById('HiddentxtInsltude');
            var txtinseripno = document.getElementById('HiddentxtInsipno');

            $.getJSON(
                "/JobInformation/GetAllData_ForDeleteOperation", { "ChangedDropDown": changedDropDown, "DdltxtJobType": ddltxtJobType, "TxtjobYear": txtjobYear },
                function (myData) {

                    HiddentxtCnf_JobID.value = myData.Cnf_JobID;
                    //HiddentxtCompanyID.value = myData.COMPID;
                    idJOBCDT.value = myData.JOBCDT;
                    ddltxtRedID.value = myData.REGID;
                    ddltxtPARTYID.value = myData.party;
                    txtCONSIGNEENM.value = myData.CONSIGNEENM;
                    txtCONSIGNEEADD.value = myData.CONSIGNEEADD;
                    txtSUPPLIERNM.value = myData.SUPPLIERNM;
                    txtPKGS.value = myData.PKGS;
                    txtGOODS.value = myData.GOODS;
                    txtWTGROSS.value = myData.WTGROSS;
                    txtWTNET.value = myData.WTNET;
                    txtCNFV_USD.value = myData.CNFV_USD;
                    txtCNFV_ETP.value = myData.CNFV_ETP;
                    txtCNFV_ERT.value = myData.CNFV_ERT;
                    txtCNFV_BDT.value = myData.CNFV_BDT;
                    txtCRFV_USD.value = myData.CRFV_USD;
                    txtASSV_BDT.value = myData.ASSV_BDT;
                    txtCOMMAMT.value = myData.COMMAMT;
                    txtCONTNO.value = myData.CONTNO;
                    txtDOCINVNO.value = myData.DOCINVNO;
                    idDOCINVDT.value = myData.DOCINVDT;
                    txtPERMITNO.value = myData.PERMITNO;
                    idPERMITDT.value = myData.PERMITDT;
                    txtBILLNOM.value = myData.BILLNOM;
                    idBILLDTM.value = myData.BILLDTM;
                    idBILLFDT.value = myData.BILLFDT;
                    txtBENO.value = myData.BENO;
                    idBEDT.value = myData.BEDT;
                    txtLCNO.value = myData.LCNO;
                    idLCDT.value = myData.LCDT;
                    txtSTATUS.value = myData.STATUS;

                    txtInseruserId.value = myData.INSUSERID;
                    txtInsertime.value = myData.INSTIME;
                    txtinslutude.value = myData.INSLTUDE;
                    txtinseripno.value = myData.INSIPNO;

                    document.getElementById("ddltxtRedID").focus();


                });


            $('#idJOBCDT').val("");
            $('#ddltxtRedID').val("");
            $('#ddltxtPARTYID').val("");
            $('#txtCONSIGNEENM').val("");
            $('#txtCONSIGNEEADD').val("");
            $('#txtSUPPLIERNM').val("");
            $('#txtPKGS').val("");
            $('#txtGOODS').val("");
            $('#txtWTGROSS').val("");
            $('#txtWTNET').val("");
            $('#txtCNFV_USD').val("");
            $('#txtCNFV_ETP').val("");
            $('#txtCNFV_ERT').val("");
            $('#txtCNFV_BDT').val("");
            $('#txtCRFV_USD').val("");
            $('#txtASSV_BDT').val("");
            $('#txtCOMMAMT').val("");
            $('#txtCONTNO').val("");
            $('#txtDOCINVNO').val("");
            $('#idDOCINVDT').val("");
            $('#txtPERMITNO').val("");
            $('#idPERMITDT').val("");
            $('#txtBILLNOM').val("");
            $('#idBILLDTM').val("");
            $('#idBILLFDT').val("");
            $('#txtBENO').val("");
            $('#idBEDT').val("");
            $('#txtLCNO').val("");
            $('#idLCDT').val("");
            $('#txtSTATUS').val("");


        });



        });
    </script>

  
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


